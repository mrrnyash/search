"""empty message

Revision ID: 30f822c5ab26
Revises: 
Create Date: 2022-04-20 23:53:27.353315

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '30f822c5ab26'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('author_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('author_id')
    )
    op.create_index(op.f('ix_author_author_name'), 'author', ['author_name'], unique=False)
    op.create_table('database',
    sa.Column('database_id', sa.Integer(), nullable=False),
    sa.Column('database_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('database_id')
    )
    op.create_index(op.f('ix_database_database_name'), 'database', ['database_name'], unique=False)
    op.create_table('doctype',
    sa.Column('doctype_id', sa.Integer(), nullable=False),
    sa.Column('doctype_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('doctype_id')
    )
    op.create_index(op.f('ix_doctype_doctype_name'), 'doctype', ['doctype_name'], unique=True)
    op.create_table('publisher',
    sa.Column('publisher_id', sa.Integer(), nullable=False),
    sa.Column('publisher_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('publisher_id')
    )
    op.create_index(op.f('ix_publisher_publisher_name'), 'publisher', ['publisher_name'], unique=True)
    op.create_table('user_role',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('role_id'),
    sa.UniqueConstraint('role_name')
    )
    op.create_table('record',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('cover', sa.String(length=255), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('publishing_year', sa.SmallInteger(), nullable=True),
    sa.Column('isbn_issn', sa.String(length=17), nullable=True),
    sa.Column('num_pages', sa.SmallInteger(), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.Column('udk', sa.String(length=255), nullable=True),
    sa.Column('bbk', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('bibliographic_description', sa.Text(), nullable=True),
    sa.Column('database_id', sa.Integer(), nullable=True),
    sa.Column('document_type_id', sa.Integer(), nullable=True),
    sa.Column('publisher_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['database_id'], ['database.database_id'], ),
    sa.ForeignKeyConstraint(['document_type_id'], ['doctype.doctype_id'], ),
    sa.ForeignKeyConstraint(['publisher_id'], ['publisher.publisher_id'], ),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('cover'),
    sa.UniqueConstraint('url')
    )
    op.create_index(op.f('ix_record_bbk'), 'record', ['bbk'], unique=True)
    op.create_index(op.f('ix_record_isbn_issn'), 'record', ['isbn_issn'], unique=True)
    op.create_index(op.f('ix_record_udk'), 'record', ['udk'], unique=True)
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('user_email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['user_role.role_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('author_record',
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['author.author_id'], ),
    sa.ForeignKeyConstraint(['record_id'], ['record.record_id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('author_record')
    op.drop_table('user')
    op.drop_index(op.f('ix_record_udk'), table_name='record')
    op.drop_index(op.f('ix_record_isbn_issn'), table_name='record')
    op.drop_index(op.f('ix_record_bbk'), table_name='record')
    op.drop_table('record')
    op.drop_table('user_role')
    op.drop_index(op.f('ix_publisher_publisher_name'), table_name='publisher')
    op.drop_table('publisher')
    op.drop_index(op.f('ix_doctype_doctype_name'), table_name='doctype')
    op.drop_table('doctype')
    op.drop_index(op.f('ix_database_database_name'), table_name='database')
    op.drop_table('database')
    op.drop_index(op.f('ix_author_author_name'), table_name='author')
    op.drop_table('author')
    # ### end Alembic commands ###

"""empty message

Revision ID: 6ee03484e495
Revises: 
Create Date: 2022-05-28 23:59:43.854717

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6ee03484e495'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_author_name'), 'author', ['name'], unique=True)
    op.create_table('document_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_type_name'), 'document_type', ['name'], unique=True)
    op.create_table('keyword',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('publisher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_publisher_name'), 'publisher', ['name'], unique=True)
    op.create_table('source_database',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_source_database_name'), 'source_database', ['name'], unique=True)
    op.create_table('user_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('publishing_year', sa.SmallInteger(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('cover', sa.String(length=255), nullable=True),
    sa.Column('isbn', sa.String(length=255), nullable=True),
    sa.Column('issn', sa.String(length=255), nullable=True),
    sa.Column('pages', sa.SmallInteger(), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.Column('udc', sa.String(length=255), nullable=True),
    sa.Column('bbk', sa.String(length=255), nullable=True),
    sa.Column('bibliographic_description', sa.Text(), nullable=True),
    sa.Column('hash_1', sa.String(length=255), nullable=True),
    sa.Column('hash_2', sa.String(length=255), nullable=True),
    sa.Column('source_database_id', sa.Integer(), nullable=True),
    sa.Column('publisher_id', sa.Integer(), nullable=True),
    sa.Column('document_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['document_type_id'], ['document_type.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['publisher_id'], ['publisher.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['source_database_id'], ['source_database.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cover'),
    sa.UniqueConstraint('hash_1'),
    sa.UniqueConstraint('hash_2'),
    sa.UniqueConstraint('url')
    )
    op.create_index(op.f('ix_record_bbk'), 'record', ['bbk'], unique=False)
    op.create_index(op.f('ix_record_isbn'), 'record', ['isbn'], unique=False)
    op.create_index(op.f('ix_record_issn'), 'record', ['issn'], unique=False)
    op.create_index(op.f('ix_record_udc'), 'record', ['udc'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['user_role.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('records_authors',
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['record_id'], ['record.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('author_id', 'record_id')
    )
    op.create_table('records_keywords',
    sa.Column('keyword_id', sa.Integer(), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['keyword_id'], ['keyword.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['record_id'], ['record.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('keyword_id', 'record_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('records_keywords')
    op.drop_table('records_authors')
    op.drop_table('user')
    op.drop_index(op.f('ix_record_udc'), table_name='record')
    op.drop_index(op.f('ix_record_issn'), table_name='record')
    op.drop_index(op.f('ix_record_isbn'), table_name='record')
    op.drop_index(op.f('ix_record_bbk'), table_name='record')
    op.drop_table('record')
    op.drop_table('user_role')
    op.drop_index(op.f('ix_source_database_name'), table_name='source_database')
    op.drop_table('source_database')
    op.drop_index(op.f('ix_publisher_name'), table_name='publisher')
    op.drop_table('publisher')
    op.drop_table('keyword')
    op.drop_index(op.f('ix_document_type_name'), table_name='document_type')
    op.drop_table('document_type')
    op.drop_index(op.f('ix_author_name'), table_name='author')
    op.drop_table('author')
    # ### end Alembic commands ###
